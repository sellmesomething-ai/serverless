"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Response = void 0;
const logger_1 = require("../../utils/logger");
const debug = (0, logger_1.getDebugFunction)('twilio-run:response');
class Response {
    constructor(options) {
        this.body = null;
        this.statusCode = 200;
        this.headers = {};
        if (options && options.statusCode) {
            this.statusCode = options.statusCode;
        }
        if (options && options.body) {
            this.body = options.body;
        }
        if (options && options.headers) {
            this.headers = options.headers;
        }
    }
    setStatusCode(statusCode) {
        debug('Setting status code to %d', statusCode);
        this.statusCode = statusCode;
        return this;
    }
    setBody(body) {
        debug('Setting response body to %o', body);
        this.body = body;
        return this;
    }
    setHeaders(headersObject) {
        debug('Setting headers to: %P', headersObject);
        if (typeof headersObject !== 'object') {
            return this;
        }
        this.headers = headersObject;
        return this;
    }
    appendHeader(key, value) {
        debug('Appending header for %s', key, value);
        this.headers = this.headers || {};
        this.headers[key] = value;
        return this;
    }
    applyToExpressResponse(res) {
        debug('Setting values on response: %P', {
            statusCode: this.statusCode,
            headers: this.headers,
            body: this.body,
        });
        res.status(this.statusCode);
        res.set(this.headers);
        res.send(this.body);
    }
    serialize() {
        return {
            statusCode: this.statusCode,
            body: this.headers['Content-Type'] === 'application/json'
                ? JSON.stringify(this.body)
                : this.body,
            headers: this.headers,
        };
    }
}
exports.Response = Response;
