"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readSpecializedConfig = exports.EXCLUDED_FLAGS = void 0;
const configLoader_1 = require("./utils/configLoader");
exports.EXCLUDED_FLAGS = [
    'username',
    'password',
    'config',
    'key',
    'value',
    'show-values',
];
function readSpecializedConfig(baseDir, configFileName, commandConfigName, opts) {
    const config = (0, configLoader_1.getConfig)(baseDir, configFileName);
    let result = {};
    const { projects: projectsConfig, environments: environmentsConfig, commands: commandConfig } = config, baseConfig = __rest(config, ["projects", "environments", "commands"]);
    // take base level config logic
    result = baseConfig;
    // override if command specific config exists
    if (commandConfig === null || commandConfig === void 0 ? void 0 : commandConfig.hasOwnProperty(commandConfigName)) {
        result = Object.assign(Object.assign({}, result), commandConfig[commandConfigName]);
    }
    const environmentValue = typeof (opts === null || opts === void 0 ? void 0 : opts.environmentSuffix) === 'string' &&
        opts.environmentSuffix.length === 0
        ? '*'
        : opts === null || opts === void 0 ? void 0 : opts.environmentSuffix;
    // override if environment config exists
    if (environmentValue &&
        environmentsConfig &&
        environmentsConfig[environmentValue]) {
        result = Object.assign(Object.assign({}, result), environmentsConfig[environmentValue]);
    }
    // override if project specific config exists
    if (opts &&
        opts.username &&
        projectsConfig &&
        (projectsConfig[opts.username] ||
            projectsConfig[`${opts.username}:${opts.region}`])) {
        if (projectsConfig[`${opts.username}:${opts.region}`]) {
            result = Object.assign(Object.assign({}, result), projectsConfig[`${opts.username}:${opts.region}`]);
        }
        else if (opts.region === 'us1' || opts.region === undefined) {
            result = Object.assign(Object.assign({}, result), projectsConfig[opts.username]);
        }
    }
    exports.EXCLUDED_FLAGS.forEach((key) => {
        delete result[key];
    });
    return result;
}
exports.readSpecializedConfig = readSpecializedConfig;
