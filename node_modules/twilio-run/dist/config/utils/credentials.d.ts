import { ExternalCliOptions } from '../../commands/shared';
import { SharedFlagsWithCredentials } from '../../flags';
import { EnvironmentVariablesWithAuth } from '../../types/generic';
export type Credentials = {
    username: string;
    password: string;
};
/**
 * Determines the credentials by the following order of preference:
 * 1. value via explicit flags
 * If the command is twilio-run deploy
 *   2. value in .env file
 *   3. empty string
 * Else if the plugin is run from the Twilio CLI then
 *   2. value passed in through externalCliOptions if `profile` exists
 *   3. value passed in through externalCliOptions if `project` (deprecated and removed in `@twilio/cli-core` v3) exists
 *   4. value passed in through externalCliOptions
 *   5. empty string
 * @param flags Flags passed into command
 * @param envVariables Environment variables from (.env or system environment)
 * @param externalCliOptions Any external information for example passed by the Twilio CLI
 */
export declare function getCredentialsFromFlags<T extends SharedFlagsWithCredentials>(flags: T, envVariables: EnvironmentVariablesWithAuth, externalCliOptions?: ExternalCliOptions): Promise<Credentials>;
