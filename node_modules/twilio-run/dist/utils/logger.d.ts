/// <reference types="debug" />
import { ClientApiError } from '@twilio-labs/serverless-api/dist/utils/error';
import ora from 'ora';
import debug from './debug';
export declare const LoggingLevel: {
    debug: number;
    info: number;
    warn: number;
    error: number;
    none: number;
};
export type LoggingLevelValue = number;
export type LoggingLevelNames = keyof typeof LoggingLevel;
export interface ILogger {
    config: LoggerOptions;
    useDebugModule?: boolean;
    debug(msg: string): void;
    info(msg: string): void;
    warn(msg: string, title?: string): void;
    error(msg: string, title?: string): void;
    log(msg: string, level: LoggingLevelValue): void;
}
export type LoggerOptions = {
    level: LoggingLevelValue;
};
export declare class Logger implements ILogger {
    private options;
    useDebugModule: boolean;
    get config(): LoggerOptions;
    set config(val: LoggerOptions);
    constructor(opts: LoggerOptions);
    debug(msg: string): void;
    info(msg: string): void;
    warn(msg: string, title?: string): void;
    error(msg: string, title?: string): void;
    log(msg: string, level: LoggingLevelValue): void;
}
export declare function getDebugFunction(namespace: string): debug.Debugger;
export declare function setLogLevelByName(name: LoggingLevelNames): void;
export declare function logApiError(logger: ILogger, err: ClientApiError): void;
export declare function getOraSpinner(options?: string | ora.Options): ora.Ora;
export declare let logger: ILogger;
export declare function overrideLogger(newLogger: ILogger): void;
