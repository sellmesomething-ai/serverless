"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkForValidAuthToken = void 0;
const common_tags_1 = require("common-tags");
const logger_1 = require("../utils/logger");
const chalk = require("chalk");
function checkForValidAuthToken(authToken, options = { shouldPrintMessage: false, shouldThrowError: false }) {
    if (authToken && authToken.length === 32) {
        return true;
    }
    let message = '';
    let title = '';
    if (!authToken) {
        title = 'Missing Auth Token';
        message = (0, common_tags_1.stripIndent) `
      You are missing a Twilio Auth Token. You can add one into your .env file:

      ${chalk.bold('AUTH_TOKEN=')}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    `;
    }
    else {
        title = 'Invalid Auth Token';
        message = (0, common_tags_1.stripIndent) `
      The value for your AUTH_TOKEN in your .env file is not a valid Twilio Auth Token.

      It should be 32 characters long and made of letters and numbers.
    `;
    }
    if (options.shouldPrintMessage && message) {
        logger_1.logger.error(message, title);
    }
    if (options.shouldThrowError && message) {
        const err = new Error(title);
        err.name = 'INVALID_CONFIG';
        err.message = `${title}\n${message}`;
        let meta = '';
        if (options.functionName) {
            meta = `\n--- at ${options.functionName}`;
        }
        err.stack = `${err.message}${meta}`;
        throw err;
    }
    return false;
}
exports.checkForValidAuthToken = checkForValidAuthToken;
