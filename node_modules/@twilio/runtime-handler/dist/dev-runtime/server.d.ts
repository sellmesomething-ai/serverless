/// <reference types="node" />
import { EventEmitter } from 'events';
import express from 'express';
import { RouteInfo, ServerConfig } from './types';
export declare interface LocalDevelopmentServer {
    on(event: 'request-log', listener: (logMessage: string) => void): this;
    on(event: 'updated-routes', listener: (config: ServerConfig, routes: RouteInfo) => void): this;
    new (port: number | string, config: ServerConfig): LocalDevelopmentServer;
}
export declare class LocalDevelopmentServer extends EventEmitter {
    private port;
    private config;
    private app;
    private routes;
    private routeMap;
    constructor(port: number | string, config: ServerConfig);
    private normalizeConfig;
    private logFunction;
    private setRoutes;
    private createServer;
    listen: () => Promise<unknown>;
    getApp: () => express.Express;
    update: (routes: RouteInfo) => void;
}
export type { ServerConfig } from './types';
